<?php

class AdminController extends BaseController
{

    /**
     * Action name
     * @var string
     */
    protected $bootstrap = '<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-KyZXEAg3QhqLMpG8r+8fhAXLRk2vvoC2f3B09zVXn8CA5QIVfZOJ3BCsw2P0p/We" crossorigin="anonymous">';
    protected $style = "light";
    protected $rankName = [];
    protected $rankColor = [];
    public $name = 'index';

    /**
     * @var UserProfile
     */
    protected $UP;

    public function __construct(UserProfile $UserProfile)
    {
        $this->UP = $UserProfile;
        include_once './lang/ru/rank.php';
        $this->rankColor = $rankColor;
        $this->rankName = $rankName;
    }

    protected function makeRankArray($inArray = [])
    {
        return parent::makeRankArray($inArray);
    }

    protected function redirect($url)
    {
        return parent::redirect($url); // TODO: Change the autogenerated stub
    }


    public function adminAction(Request $request)
    {
        $user = $this->UP->getUser($_COOKIE['pAccount']);
        if($user['root'] > 1)
        {
            return new Response(
                $this->render('admin/main', [
                    'title' => 'A: '.$user['surname'].' '.$user['username'],
                    'bs' => $this->bootstrap,
                    'style' => $this->style,
                    'user' => $user,
                ])
            );
        }
        return new Response(
            $this->render(
                'template', [
                    'title' => 'TEMP PAGE',
                    'bs' => $this->bootstrap,
                    'style' => $this->style,
                    'error' => "You don't have permission"
                ])
        );
    }

    public function adminUserAction(Request $request)
    {
        $user = $this->UP->getUser($_COOKIE['pAccount']);
        if($user['root'] > 1)
        {
            $userID = $request->getQueryParameter("userID");
            if(!$this->UP->checkId($userID))
            {
                return new Response(
                    $this->render('admin/main', [
                        'error' => 'Пользователя нет в системе',
                        'title' => 'A: '.$user['surname'].' '.$user['username'],
                        'bs' => $this->bootstrap,
                        'style' => $this->style,
                        'user' => $user,
                    ])
                );
            }
            $sUser = $this->UP->getUser($userID);
            return new Response(
                $this->render('admin/userProfile', [
                    'title' => 'A: '.$user['surname'].' '.$user['username'],
                    'bs' => $this->bootstrap,
                    'style' => $this->style,
                    'user' => $user,
                    'sUser' => $sUser,
                    'rankName' => $this->rankName,
                ])
            );
        }
        return new Response(
            $this->render(
                'template', [
                'title' => 'TEMP PAGE',
                'bs' => $this->bootstrap,
                'style' => $this->style,
                'error' => "You don't have permission"
            ])
        );
    }

    public function changeRankAction(Request $request)
    {
        $user = $this->UP->getUser($_COOKIE['pAccount']);
        if($user['root'] > 1)
        {
            $userID = $request->getQueryParameter("userID");
            $newRank = $request->getRequestParameter('newRank');
            $this->UP->changeRank($userID, $newRank);
            $sUser = $this->UP->getUser($userID);
            return new Response(
                $this->render('admin/userProfile', [
                    'title' => 'A: '.$user['surname'].' '.$user['username'],
                    'bs' => $this->bootstrap,
                    'style' => $this->style,
                    'user' => $user,
                    'sUser' => $sUser,
                    'redi' => '1',
                ])
            );
        }
        return new Response(
            $this->render(
                'template', [
                'title' => 'TEMP PAGE',
                'bs' => $this->bootstrap,
                'style' => $this->style,
                'error' => "You don't have permission"
            ])
        );
    }

    public function changeClubAction(Request $request)
    {
        $user = $this->UP->getUser($_COOKIE['pAccount']);
        if($user['root'] > 1)
        {
            $userID = $request->getQueryParameter("userID");
            $newRank = $request->getRequestParameter('newClub');
            $this->UP->changeClub($userID, $newRank);
            $sUser = $this->UP->getUser($userID);
            return new Response(
                $this->render('admin/userProfile', [
                    'title' => 'A: '.$user['surname'].' '.$user['username'],
                    'bs' => $this->bootstrap,
                    'style' => $this->style,
                    'user' => $user,
                    'sUser' => $sUser,
                    'redi' => '1',
                ])
            );
        }
        return new Response(
            $this->render(
                'template', [
                'title' => 'TEMP PAGE',
                'bs' => $this->bootstrap,
                'style' => $this->style,
                'error' => "You don't have permission"
            ])
        );
    }

    public function addNewRankAction(Request $request)
    {
        $user = $this->UP->getUser($_COOKIE['pAccount']);
        if($user['root'] > 1)
        {
            $userID = $request->getQueryParameter("userID");
            $dateTake = $request->getRequestParameter('dateTake');
            $rankName = $request->getRequestParameter('rankName');
            $this->UP->addNewRank($userID, $dateTake, $rankName);
            $sUser = $this->UP->getUser($userID);
            return new Response(
                $this->render('admin/userProfile', [
                    'title' => 'A: '.$user['surname'].' '.$user['username'],
                    'bs' => $this->bootstrap,
                    'style' => $this->style,
                    'user' => $user,
                    'sUser' => $sUser,
                    'redi' => '1',
                ])
            );
        }
        return new Response(
            $this->render(
                'template', [
                'title' => 'TEMP PAGE',
                'bs' => $this->bootstrap,
                'style' => $this->style,
                'error' => "You don't have permission"
            ])
        );
    }


    public function changeUserPasswordAction(Request $request)
    {
        $user = $this->UP->getUser($_COOKIE['pAccount']);
        if($user['root'] > 1)
        {
            $userID = $request->getQueryParameter("userID");
            $newPas = $request->getRequestParameter('newPassword');
            $this->UP->changePassword($userID, $newPas);
            $userFIO  = $this->UP->getUserFio($userID);
            $userRank = $this->UP->getUserRank($userID);
            $userClub = $this->UP->getUserClub($userID);
            $curRankUser = $this->UP->getUserCurRank($userID);
            $userRoot = $this->UP->getAdminStatus($userID);
            $sUser = $this->UP->getUser($userID);
            return new Response(
                $this->render('admin/userProfile', [
                    'title' => "Имя Фамилия пользователя",
                    'bs' => $this->bootstrap,
                    'style' => $this->style,
                    'user' => $user,
                    'sUser' => $sUser,
                    'redi' => '1',
                ])
            );
        }
        return new Response(
            $this->render(
                'template', [
                'title' => 'TEMP PAGE',
                'bs' => $this->bootstrap,
                'style' => $this->style,
                'error' => "You don't have permission"
            ])
        );
    }
}